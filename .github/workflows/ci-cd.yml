name: Build, Test and Push Docker Image

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Pega o código do repositório
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2. Login no Docker Hub (precisa dos secrets configurados)
      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build da imagem da aplicação
      - name: Build da imagem Movie App
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movie-rating-app:latest ./movie-app

      # 4. Testar container da aplicação
      - name: Testar container Movie App
        run: |
          docker run -d -p 5000:5000 --name test-app ${{ secrets.DOCKERHUB_USERNAME }}/movie-rating-app:latest
          sleep 10
          curl -f http://localhost:5000 || (echo "Teste da aplicação falhou" && exit 1)
          docker stop test-app
          docker rm test-app

      # 5. Push da imagem da aplicação
      - name: Push da imagem Movie App
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movie-rating-app:latest

      # 6. Build da imagem ETL
      - name: Build da imagem ETL
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movie-etl:latest ./etl-data-cleaning -f ./etl-data-cleaning/Dockerfile-dados01

      # 7. Push da imagem ETL
      - name: Push da imagem ETL
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movie-etl:latest

      # 8. Build da imagem ETL Postgres
      - name: Build da imagem ETL Postgres
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movie-etl-postgres:latest ./etl-postgres

      # 9. Push da imagem ETL Postgres
      - name: Push da imagem ETL Postgres
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movie-etl-postgres:latest